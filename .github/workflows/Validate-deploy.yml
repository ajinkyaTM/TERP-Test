name: Validate Salesforce Deployment

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  validate-deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Salesforce CLI
      run: npm install --global @salesforce/cli

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.2

    - name: Fetch base and head branches/commits
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}
        git fetch origin ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}

    - name: Run generateXML.py
      run: |
        python generateXML.py \
          --base_branch ${{ github.event.pull_request.base.ref }} \
          --compare_branch ${{ github.event.pull_request.head.ref }}

    - name: Check if XML files exist
      id: check_xml
      run: |
        exists=false
        if [ -f "package.xml" ] || [ -f "destructiveChanges.xml" ]; then
          exists=true
        fi
        echo "exists=$exists" >> $GITHUB_OUTPUT
        echo "XML files exist: $exists"

    - name: Set Org Credentials Based on Branch
      run: |
        BRANCH_NAME="${{ github.head_ref }}"
        echo "Branch: $BRANCH_NAME"

        if [[ "$BRANCH_NAME" == "Dev1" ]]; then
          echo "SF_USERNAME=${{ secrets.SF_USERNAME_DEV }}" >> $GITHUB_ENV
          echo "SF_CONSUMER_KEY=${{ secrets.SF_CONSUMER_DEV_KEY }}" >> $GITHUB_ENV
          echo "SF_INSTANCE_URL=${{ secrets.SF_INSTANCE_UAT_URL }}" >> $GITHUB_ENV
        elif [[ "$BRANCH_NAME" == "QA" ]]; then
          echo "SF_USERNAME=${{ secrets.SF_USERNAME_QA }}" >> $GITHUB_ENV
          echo "SF_CONSUMER_KEY=${{ secrets.SF_CONSUMER_QA_KEY }}" >> $GITHUB_ENV
          echo "SF_INSTANCE_URL=${{ secrets.SF_INSTANCE_UAT_URL }}" >> $GITHUB_ENV
        elif [[ "$BRANCH_NAME" == "UAT" ]]; then
          echo "SF_USERNAME=${{ secrets.SF_USERNAME_UAT }}" >> $GITHUB_ENV
          echo "SF_CONSUMER_KEY=${{ secrets.SF_CONSUMERUAT_KEY }}" >> $GITHUB_ENV
          echo "SF_INSTANCE_URL=${{ secrets.SF_INSTANCE_UAT_URL }}" >> $GITHUB_ENV
        elif [[ "$BRANCH_NAME" == "main" ]]; then
          echo "SF_USERNAME=${{ secrets.SF_USERNAME_MAIN }}" >> $GITHUB_ENV
          echo "SF_CONSUMER_KEY=${{ secrets.SF_CONSUMER_MAIN_KEY }}" >> $GITHUB_ENV
          echo "SF_INSTANCE_URL=${{ secrets.SF_INSTANCE_UAT_URL }}" >> $GITHUB_ENV
        else
          echo "Unsupported branch: $BRANCH_NAME"
          exit 1
        fi

    - name: Decode JWT key
      if: steps.check_xml.outputs.exists == 'true'
      run: |
        echo "${{ secrets.SF_JWT_SECRET }}" > server.key

    - name: Authenticate with Salesforce (sf CLI)
      if: steps.check_xml.outputs.exists == 'true'
      run: |
        sf org login jwt \
          --client-id ${{ secrets.SF_CONSUMER_KEY }} \
          --jwt-key-file server.key \
          --username ${{ secrets.SF_USERNAME }} \
          --instance-url ${{ secrets.SF_INSTANCE_URL }} \
          --alias ci-org \
          --set-default

    - name: Validate Deployment using package.xml
      if: steps.check_xml.outputs.exists == 'true'
      run: |
        if [ -f "package.xml" ]; then
          sf project deploy validate \
            --manifest package.xml \
            --target-org ci-org \
            --test-level RunLocalTests \
            --wait 10 \
            --verbose
        else
          echo "package.xml not found, skipping deployment."
        fi

    # - name: Validate Destructive Changes using destructiveChanges.xml
    #   if: steps.check_xml.outputs.exists == 'true'
    #   run: |
    #     if [ -f "destructiveChanges.xml" ]; then
    #       sf project deploy validate \
    #         --manifest destructiveChanges.xml \
    #         --target-org ci-org \
    #         --test-level RunLocalTests \
    #         --wait 10 \
    #         --verbose
    #     else
    #       echo "destructiveChanges.xml not found, skipping destructive validation."
    #     fi
